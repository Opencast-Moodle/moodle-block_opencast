name: Moodle Plugin CI

on: [push, pull_request]

jobs:
  static:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
    env:
      DATABASE_SERVICE: 'pgsql'
      MOODLE_VERSION: 'MOODLE_400_STABLE'
      PHP_VERSION: '7.4'
      TOOL_BRANCH: 'oc-php-lib'

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          path: plugin

      - name: Setup PHP ${{ env.PHP_VERSION }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(cd /home/runner/.composer && composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Composer cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^3
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

      - name: Install moodle-plugin-ci
        run: |
          moodle-plugin-ci add-plugin --branch ${{ env.TOOL_BRANCH }} Opencast-Moodle/moodle-tool_opencast
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1 --no-init
        env:
          DB: ${{ env.DATABASE_SERVICE }}
          MOODLE_BRANCH: ${{ env.MOODLE_VERSION }}

      - name: PHP Lint
        if: ${{ always() }}
        run: moodle-plugin-ci phplint

      - name: PHP Copy/Paste Detector
        continue-on-error: true
        if: ${{ always() }}
        run: moodle-plugin-ci phpcpd

      - name: PHP Mess Detector
        continue-on-error: true
        if: ${{ always() }}
        run: moodle-plugin-ci phpmd

      - name: Moodle Code Checker
        if: ${{ always() }}
        run: moodle-plugin-ci codechecker

      - name: Moodle PHPDoc Checker
        if: ${{ always() }}
        run: moodle-plugin-ci phpdoc

      - name: Validating
        if: ${{ always() }}
        run: moodle-plugin-ci validate

      - name: Check upgrade savepoints
        if: ${{ always() }}
        run: moodle-plugin-ci savepoints

      - name: Mustache Lint
        if: ${{ always() }}
        run: moodle-plugin-ci mustache

      - name: Grunt
        if: ${{ always() }}
        run: moodle-plugin-ci grunt --max-lint-warnings 1 # Dumb, but it seems like one warning is always generated
                                                          # because we have a third party file, which is ignored by default.

  test:
    runs-on: ubuntu-latest
    needs: static
    name: test (${{ matrix.moodle-branch }}/${{ matrix.php }}/${{ matrix.database }})
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
      mariadb:
        image: mariadb:10
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_CHARACTER_SET_SERVER: "utf8mb4"
          MYSQL_COLLATION_SERVER: "utf8mb4_unicode_ci"

        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        php: ['7.4']
        moodle-branch: ['MOODLE_39_STABLE', 'MOODLE_310_STABLE', 'MOODLE_311_STABLE', 'MOODLE_400_STABLE']
        database: ['mariadb', 'pgsql']
        opencast: ['11.5']
        tool-branch: ['oc-php-lib']
        mod-branch: ['main']

    steps:
      - name: Check out opencast-docker
        uses: actions/checkout@v3
        with:
          repository: opencast/opencast-docker
          ref: ${{ matrix.opencast }}
          path: opencast-docker

      - name: Start Opencast
        run: docker-compose -p opencast-allinone -f opencast-docker/docker-compose/docker-compose.allinone.h2.yml up -d

      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          path: plugin

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(cd /home/runner/.composer && composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Composer cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^3
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

      - name: Install moodle-plugin-ci
        run: |
          moodle-plugin-ci add-plugin --branch ${{ matrix.tool-branch }} Opencast-Moodle/moodle-tool_opencast
          moodle-plugin-ci add-plugin --branch ${{ matrix.mod-branch }} Opencast-Moodle/moodle-mod_opencast
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

      - name: PHPUnit tests
        if: ${{ always() }}
        run: moodle-plugin-ci phpunit --fail-on-warning

      - name: Behat features
        if: ${{ always() }}
        run: moodle-plugin-ci behat --profile chrome
