{"version":3,"file":"block_form_handler.min.js","sources":["../src/block_form_handler.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to initialise the opencast block.\n *\n * @module     block_opencast\n * @copyright  2019 Farbod Zamani (zamani@elan-ev.de)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery'], function($) {\n    /**\n     * Instantiate the window variable in order to work with Intervals\n     *\n     */\n    window.presenterIntervalHandle = null;\n    window.presentationIntervalHandle = null;\n    window.presenterRun = false;\n    window.presentationRun = false;\n\n    /**\n     * Clears intervals and enables Save Change Button after upload process is completed\n     *\n     */\n    function afterUpload() {\n        if (!window.presentationRun && !window.presenterRun) {\n            clearInterval(window.presentationIntervalHandle);\n            clearInterval(window.presenterIntervalHandle);\n            $('[name=\"submitbutton\"]').removeAttr('disabled');\n        }\n    }\n\n    /**\n     * Makes sure that autocomplete fields receive the form-control class in order to have consistency\n     *\n     */\n    function autocompletePrettifier() {\n        $('div[data-fieldtype=\"autocomplete\"]').each(function(i, elm) {\n            var input = $(elm).find('input');\n            if (!input.hasClass('form-control')) {\n                input.addClass('form-control');\n            }\n        });\n    }\n\n    /**\n     * Sets default title if it is empty. If the filename contains one or more dots, everything after the last dot\n     * is treated as the fileextension and removed.\n     *\n     * @param {string} filename the filename.\n     */\n    function setDefaultTitle(filename) {\n        var title = $('input[name=\"title\"]').val();\n        if (!title && filename) {\n            // Removing the extension from the filename.\n            let filenameArray = filename.split('.');\n            if (filenameArray.length > 1) {\n                filenameArray.pop();\n            }\n            filename = filenameArray.join('.');\n            $('input[name=\"title\"]').val(filename);\n        }\n    }\n\n    /**\n     * Extracts the filename from filelist.\n     *\n     * @param {jQuery} filelist The filename\n     * @returns {string} The filename\n     */\n    function getFilenameFromFilelist(filelist) {\n        var filename = '';\n        if (filelist.length) {\n            var filelinks = filelist.find('.filepicker-filename > a');\n            filename = filelinks.length ? $(filelinks[0]).text() : '';\n        }\n        return filename;\n    }\n\n    /**\n     * Initialise all of the modules for the opencast block.\n     *\n     */\n    var init = function() {\n        // Toggle visibility of terms of use\n        $('#termsofuse').hide();\n        $('#termsofuse_toggle').on('click', function(e) {\n            $('#termsofuse').toggle();\n            e.preventDefault();\n        });\n\n        // Chunkupload.\n        $('.local_chunkupload input[type=\"file\"]').on('change', function(e) {\n            setTimeout(function() {\n                var span = $(e.currentTarget).siblings('label.chunkupload-label').find('.chunkupload-filename');\n                if (span.length) {\n                    setDefaultTitle($(span[0]).text());\n                }\n            }, 500);\n            // Enable/Disable \"Add video\" button for chunkuploader as well.\n            var parent = e.currentTarget.closest('.local_chunkupload');\n            var progressbar = parent ? parent.querySelector('.chunkupload-progress') : null;\n            if (progressbar) {\n                var videoIdentifier = e.currentTarget.getAttribute('id');\n                var isvalid = ['id_video_presenter_chunk_file', 'id_video_presentation_chunk_file'].includes(videoIdentifier);\n                if (isvalid) {\n                    document.querySelector('[name=\"submitbutton\"]').disabled = true;\n                }\n                if (videoIdentifier == 'id_video_presenter_chunk_file') {\n                    window.presenterIntervalHandle = setInterval(() => {\n                        window.presenterRun = true;\n                        if (progressbar.offsetWidth == 0) {\n                            window.presenterRun = false;\n                            afterUpload();\n                        }\n                    }, 500);\n                } else if (videoIdentifier == 'id_video_presentation_chunk_file') {\n                    window.presenterIntervalHandle = setInterval(() => {\n                        window.presentationRun = true;\n                        if (progressbar.offsetWidth == 0) {\n                            window.presentationRun = false;\n                            afterUpload();\n                        }\n                    }, 500);\n                }\n            }\n        });\n\n        $('.filepickerhidden').on('change', function(e) {\n            setTimeout(function() {\n                var filelist = $(e.currentTarget).parent().find('.filepicker-filelist');\n                var filename = getFilenameFromFilelist(filelist);\n                setDefaultTitle(filename);\n            }, 500);\n        });\n\n        $('.filepicker-filelist').on('drop', function(e) {\n            var filelist = e.currentTarget;\n            var videoIdentifier = $(filelist).parent().siblings('.filepickerhidden').attr('name');\n\n            $('[name=\"submitbutton\"]').attr('disabled', 'disabled');\n\n            if (videoIdentifier == 'video_presenter') {\n                $(filelist).addClass('presenter-uploading');\n                window.presenterIntervalHandle = setInterval(function() {\n                    window.presenterRun = true;\n                    if (!$('.presenter-uploading').hasClass('dndupload-inprogress')) {\n                        window.presenterRun = false;\n                        afterUpload();\n                    }\n                }, 500);\n            } else {\n                $(filelist).addClass('presentation-uploading');\n                window.presenterIntervalHandle = setInterval(function() {\n                    window.presentationRun = true;\n                    if (!$('.presentation-uploading').hasClass('dndupload-inprogress')) {\n                        window.presentationRun = false;\n                        afterUpload();\n                    }\n                }, 500);\n            }\n\n            setTimeout(function() {\n                var filename = getFilenameFromFilelist(filelist);\n                setDefaultTitle(filename);\n            }, 500);\n        });\n\n        // Ensures that autocomplete fields are loaded properly after 1 sec!\n        setTimeout(function() {\n            autocompletePrettifier();\n            $('.moreless-actions').on('click', function() { //\n                autocompletePrettifier();\n            });\n        }, 1000);\n    };\n\n    return {\n        init: init\n    };\n});\n\n"],"names":["define","$","afterUpload","window","presentationRun","presenterRun","clearInterval","presentationIntervalHandle","presenterIntervalHandle","removeAttr","autocompletePrettifier","each","i","elm","input","find","hasClass","addClass","setDefaultTitle","filename","val","filenameArray","split","length","pop","join","getFilenameFromFilelist","filelist","filelinks","text","init","hide","on","e","toggle","preventDefault","setTimeout","span","currentTarget","siblings","parent","closest","progressbar","querySelector","videoIdentifier","getAttribute","includes","document","disabled","setInterval","offsetWidth","attr"],"mappings":";;;;;;;AAuBAA,2CAAO,CAAC,WAAW,SAASC,YAcfC,cACAC,OAAOC,iBAAoBD,OAAOE,eACnCC,cAAcH,OAAOI,4BACrBD,cAAcH,OAAOK,yBACrBP,EAAE,yBAAyBQ,WAAW,sBAQrCC,yBACLT,EAAE,sCAAsCU,MAAK,SAASC,EAAGC,SACjDC,MAAQb,EAAEY,KAAKE,KAAK,SACnBD,MAAME,SAAS,iBAChBF,MAAMG,SAAS,4BAWlBC,gBAAgBC,cACTlB,EAAE,uBAAuBmB,OACvBD,SAAU,KAEhBE,cAAgBF,SAASG,MAAM,KAC/BD,cAAcE,OAAS,GACvBF,cAAcG,MAElBL,SAAWE,cAAcI,KAAK,KAC9BxB,EAAE,uBAAuBmB,IAAID,oBAU5BO,wBAAwBC,cACzBR,SAAW,MACXQ,SAASJ,OAAQ,KACbK,UAAYD,SAASZ,KAAK,4BAC9BI,SAAWS,UAAUL,OAAStB,EAAE2B,UAAU,IAAIC,OAAS,UAEpDV,SA7DXhB,OAAOK,wBAA0B,KACjCL,OAAOI,2BAA6B,KACpCJ,OAAOE,cAAe,EACtBF,OAAOC,iBAAkB,QA+JlB,CACH0B,KA/FO,WAEP7B,EAAE,eAAe8B,OACjB9B,EAAE,sBAAsB+B,GAAG,SAAS,SAASC,GACzChC,EAAE,eAAeiC,SACjBD,EAAEE,oBAINlC,EAAE,yCAAyC+B,GAAG,UAAU,SAASC,GAC7DG,YAAW,eACHC,KAAOpC,EAAEgC,EAAEK,eAAeC,SAAS,2BAA2BxB,KAAK,yBACnEsB,KAAKd,QACLL,gBAAgBjB,EAAEoC,KAAK,IAAIR,UAEhC,SAECW,OAASP,EAAEK,cAAcG,QAAQ,sBACjCC,YAAcF,OAASA,OAAOG,cAAc,yBAA2B,QACvED,YAAa,KACTE,gBAAkBX,EAAEK,cAAcO,aAAa,MACrC,CAAC,gCAAiC,oCAAoCC,SAASF,mBAEzFG,SAASJ,cAAc,yBAAyBK,UAAW,GAExC,iCAAnBJ,gBACAzC,OAAOK,wBAA0ByC,aAAY,KACzC9C,OAAOE,cAAe,EACS,GAA3BqC,YAAYQ,cACZ/C,OAAOE,cAAe,EACtBH,iBAEL,KACuB,oCAAnB0C,kBACPzC,OAAOK,wBAA0ByC,aAAY,KACzC9C,OAAOC,iBAAkB,EACM,GAA3BsC,YAAYQ,cACZ/C,OAAOC,iBAAkB,EACzBF,iBAEL,UAKfD,EAAE,qBAAqB+B,GAAG,UAAU,SAASC,GACzCG,YAAW,WAGPlB,gBADeQ,wBADAzB,EAAEgC,EAAEK,eAAeE,SAASzB,KAAK,4BAGjD,QAGPd,EAAE,wBAAwB+B,GAAG,QAAQ,SAASC,OACtCN,SAAWM,EAAEK,cACbM,gBAAkB3C,EAAE0B,UAAUa,SAASD,SAAS,qBAAqBY,KAAK,QAE9ElD,EAAE,yBAAyBkD,KAAK,WAAY,YAErB,mBAAnBP,iBACA3C,EAAE0B,UAAUV,SAAS,uBACrBd,OAAOK,wBAA0ByC,aAAY,WACzC9C,OAAOE,cAAe,EACjBJ,EAAE,wBAAwBe,SAAS,0BACpCb,OAAOE,cAAe,EACtBH,iBAEL,OAEHD,EAAE0B,UAAUV,SAAS,0BACrBd,OAAOK,wBAA0ByC,aAAY,WACzC9C,OAAOC,iBAAkB,EACpBH,EAAE,2BAA2Be,SAAS,0BACvCb,OAAOC,iBAAkB,EACzBF,iBAEL,MAGPkC,YAAW,WAEPlB,gBADeQ,wBAAwBC,aAExC,QAIPS,YAAW,WACP1B,yBACAT,EAAE,qBAAqB+B,GAAG,SAAS,WAC/BtB,8BAEL"}