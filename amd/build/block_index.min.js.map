{"version":3,"file":"block_index.min.js","sources":["../src/block_index.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to initialise the opencast block.\n *\n * @module     block_opencast\n * @copyright  2021 Tamara Gunkel, University of MÃ¼nster\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/modal_factory', 'core/modal_events',\n    'core/str', 'core/url', 'core/notification', 'core/toast', 'core/ajax'],\n    function($, ModalFactory, ModalEvents, str, url, Notification, Toast, Ajax) {\n        /**\n         * Instantiate the window variable in order to work with Intervals\n         *\n         */\n        window.liveUpdateInterval = null;\n        window.liveUpdateItemsWithError = [];\n\n        var initWorkflowModal = function(ocinstanceid, courseid, langstrings) {\n            if (document.getElementById('workflowsjson')) {\n                var workflows = JSON.parse($('#workflowsjson').text());\n\n                $('.start-workflow').on('click', function(e) {\n                    e.preventDefault();\n                    var clickedVideo = $(e.currentTarget);\n                    var select = '<select class=\"custom-select mb-3\" id=\"workflowselect\" name=\"workflow\">';\n\n                    for (let workflow in workflows) {\n                        select += '<option value=\"' + workflow + '\">' + workflows[workflow].title + '</option>';\n                    }\n\n                    select += '</select>';\n\n                    ModalFactory.create({\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        title: langstrings[5],\n                        body: '<form id=\"startWorkflowForm\" method=\"post\" action=\"' +\n                            url.relativeUrl('blocks/opencast/startworkflow.php', {\n                                'ocinstanceid': ocinstanceid,\n                                'courseid': courseid,\n                                'videoid': clickedVideo.data('id')\n                            }) + '\"><div class=\"form-group\">' +\n                            '<p>' + langstrings[6] + '</p>' + select + '<div id=\"workflowdesc\"></div>' +\n                            '<iframe id=\"config-frame\" class=\"w-100 mh-100 border-0\" sandbox=\"allow-forms allow-scripts\" src=\"\">' +\n                            '</iframe><input type=\"hidden\" name=\"configparams\" id=\"configparams\"></form>'\n                    }, undefined)\n                        .then(function(modal) {\n                            modal.setSaveButtonText(langstrings[5]);\n                            var root = modal.getRoot();\n                            root.on(ModalEvents.save, function(e) {\n                                document.getElementById('config-frame').contentWindow.postMessage('getdata', '*');\n                                // Handle form submission after receiving data.\n                                e.preventDefault();\n                            });\n\n                            // Show description for initial value.\n                            modal.show().then(function() {\n                                const workflowselect = $('#workflowselect');\n                                $('#workflowdesc').html(workflows[workflowselect.val()].description);\n                                $('#config-frame').attr('src', url.relativeUrl('blocks/opencast/serveworkflowconfigpanel.php', {\n                                    'ocinstanceid': ocinstanceid,\n                                    'courseid': courseid,\n                                    'workflowid': workflowselect.val()\n                                }));\n\n                                // Show workflow description when selected.\n                                workflowselect.change(function() {\n                                    let workflowid = $(this).val();\n                                    $('#workflowdesc').html(workflows[workflowid].description);\n                                    $('#config-frame').attr('src', url.relativeUrl('blocks/opencast/serveworkflowconfigpanel.php', {\n                                        'ocinstanceid': ocinstanceid,\n                                        'courseid': courseid,\n                                        'workflowid': workflowid\n                                    }));\n                                });\n                                return;\n                            }).catch(Notification.exception);\n                            return;\n                        }).catch(Notification.exception);\n                });\n            }\n        };\n\n        var initReportModal = function(ocinstanceid, courseid, langstrings) {\n            $('.report-problem').on('click', function(e) {\n                e.preventDefault();\n                var clickedVideo = $(e.currentTarget);\n                ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: langstrings[0],\n                    body: '<form id=\"reportProblemForm\" method=\"post\" action=\"' +\n                        url.relativeUrl('blocks/opencast/reportproblem.php', {\n                            'ocinstanceid': ocinstanceid,\n                            'courseid': courseid,\n                            'videoid': clickedVideo.data('id')\n                        }) + '\"><div class=\"form-group\">' +\n                        '<label for=\"inputMessage\">' + langstrings[1] + '</label>' +\n                        '<textarea class=\"form-control\" id=\"inputMessage\" name=\"inputMessage\" rows=\"4\" placeholder=\"' +\n                        langstrings[2] + '\">' + '</textarea>' +\n                        '  <div class=\"invalid-feedback d-none\" id=\"messageValidation\">' + langstrings[3] + '</div>' +\n                        '</div></form>'\n                })\n                    .then(function(modal) {\n                        modal.setSaveButtonText(langstrings[4]);\n                        var root = modal.getRoot();\n                        root.on(ModalEvents.save, function(e) {\n                            if ($('#inputMessage').val()) {\n                                $('#reportProblemForm').submit();\n                            } else {\n                                $('#inputMessage').addClass('is-invalid');\n                                $('#messageValidation').removeClass('d-none');\n                            }\n                            e.preventDefault();\n                        });\n                        modal.show();\n                        return;\n                    }).catch(Notification.exception);\n            });\n        };\n\n        /*\n         * Initialise the status live update in the overview page.\n         */\n        var initLiveUpdate = function(ocinstanceid, contextid, reloadtimeout) {\n            if (window.liveUpdateInterval !== null) {\n                clearInterval(window.liveUpdateInterval);\n            }\n            window.liveUpdateItemsWithError = [];\n            var items = getLiveUpdateItems();\n            if (items.length) {\n                window.liveUpdateInterval = setInterval(function() {\n                    var processingItems = getLiveUpdateProcessingItems();\n                    var uploadingItems = getLiveUpdateUploadingItems();\n                    if (processingItems.length == 0 && uploadingItems.length == 0) {\n                        clearInterval(window.liveUpdateInterval);\n                        if (window.liveUpdateItemsWithError.length > 0) {\n                            var titles = window.liveUpdateItemsWithError.join('</li><li>');\n                            str.get_string('liveupdate_fail_notification_message', 'block_opencast', titles)\n                                .done(function(result) {\n                                    Notification.addNotification({\n                                        message: result,\n                                        type: 'error'\n                                    });\n                                })\n                                .fail(Notification.exception);\n                        }\n                        return;\n                    }\n                    for (var processingItem of processingItems) {\n                        liveUpdatePerformAjax('processing', ocinstanceid, contextid, processingItem, reloadtimeout);\n                    }\n                    for (var uploadingItem of uploadingItems) {\n                        liveUpdatePerformAjax('uploading', ocinstanceid, contextid, uploadingItem, reloadtimeout);\n                    }\n                }, 1000, ocinstanceid, contextid, url, reloadtimeout);\n            }\n        };\n\n        /*\n         * Gets all status live updates items (flags).\n         */\n        var getLiveUpdateItems = function() {\n            var processingItems = getLiveUpdateProcessingItems();\n            var uploadingItems = getLiveUpdateUploadingItems();\n            return processingItems.concat(uploadingItems);\n        };\n\n        /*\n         * Gets all status live updates items for Processing states.\n         */\n        var getLiveUpdateProcessingItems = function() {\n            var itemsNodeList = document.getElementsByName('liveupdate_processing_item');\n            return Array.from(itemsNodeList);\n        };\n\n        /*\n         * Gets all status live updates items for uploading status.\n         */\n        var getLiveUpdateUploadingItems = function() {\n            var itemsNodeList = document.getElementsByName('liveupdate_uploading_item');\n            return Array.from(itemsNodeList);\n        };\n\n        /*\n         * Perform status live update Ajax call to the backend to get the related info.\n         */\n        var liveUpdatePerformAjax = function(type, ocinstanceid, contextid, item, reloadtimeout) {\n            var identifier = item.value;\n            var title = item?.dataset?.title ? item.dataset.title : '';\n            if (identifier == undefined || title == '') {\n                window.liveUpdateItemsWithError.push(title);\n                item.remove();\n                return;\n            }\n            Ajax.call([{\n                methodname: 'block_opencast_get_liveupdate_info',\n                args: {contextid: contextid, ocinstanceid: ocinstanceid, type: type, identifier: identifier},\n                done: function(status) {\n                    if (status == '') {\n                        window.liveUpdateItemsWithError.push(title);\n                        item.remove();\n                        return;\n                    }\n                    var statusObject = JSON.parse(status);\n                    if (statusObject.replace != '') {\n                        replaceLiveUpdateInfo(item, statusObject.replace);\n                    }\n                    if (statusObject.remove == true) {\n                        item.remove();\n                        var stringparams = {\n                            timeout: reloadtimeout,\n                            title: title\n                        };\n                        str.get_string('liveupdate_toast_notification', 'block_opencast', stringparams)\n                            .done(function(result) {\n                                Toast.add(result);\n                            })\n                            .fail(Notification.exception);\n                        setTimeout(function() {\n                            window.location.reload();\n                        }, reloadtimeout * 1000);\n                    }\n                },\n                fail: function() {\n                    window.liveUpdateItemsWithError.push(title);\n                    item.remove();\n                }\n            }]);\n        };\n\n        /*\n         * Replace the new live update status with the current one for both text and DOM element.\n         */\n        var replaceLiveUpdateInfo = function(item, replace) {\n            if (item == undefined || replace == '' || typeof replace != 'string') {\n                return;\n            }\n            var newDiv = document.createElement('div');\n            newDiv.innerHTML = replace.trim();\n            var replaceElm = newDiv.firstChild;\n            if (replaceElm.nodeName == '#text') {\n                var prevText = item.parentNode.firstChild;\n                prevText.remove();\n                var newText = document.createTextNode(replace.trim());\n                item.parentNode.insertBefore(newText, item);\n            } else if (item.previousElementSibling) {\n                var prevElm = item.previousElementSibling;\n                newDiv.innerHTML = replace.trim();\n                if (!areElementsEqual(replaceElm, prevElm)) {\n                    prevElm.remove();\n                    item.parentNode.insertBefore(replaceElm, item);\n                }\n            }\n        };\n\n        /*\n         * Checks if the liev update DOM elements (new vs old) are equal.\n         */\n        var areElementsEqual = function(baseElm, checkElm) {\n            var isEqual = true;\n            var attributes = baseElm.getAttributeNames();\n            for (var attributeName of attributes) {\n                var baseAttributeValue = baseElm.getAttribute(attributeName).trim();\n                var checkAttributeValue = '';\n                if (checkElm.hasAttribute(attributeName)) {\n                    checkAttributeValue = checkElm.getAttribute(attributeName).trim();\n                }\n                if (checkAttributeValue == '') {\n                    continue;\n                }\n                if (checkAttributeValue != baseAttributeValue) {\n                    isEqual = false;\n                }\n            }\n            return isEqual;\n        };\n\n        /*\n         * Initialise all of the modules for the opencast block.\n         */\n        var init = function(courseid, ocinstanceid, contextid, liveupdate) {\n            // Load strings\n            var strings = [\n                {\n                    key: 'reportproblem_modal_title',\n                    component: 'block_opencast'\n                },\n                {\n                    key: 'reportproblem_modal_body',\n                    component: 'block_opencast'\n                },\n                {\n                    key: 'reportproblem_modal_placeholder',\n                    component: 'block_opencast'\n                },\n                {\n                    key: 'reportproblem_modal_required',\n                    component: 'block_opencast'\n                },\n                {\n                    key: 'reportproblem_modal_submit',\n                    component: 'block_opencast'\n                },\n                {\n                    key: 'startworkflow',\n                    component: 'block_opencast'\n                },\n                {\n                    key: 'startworkflow_modal_body',\n                    component: 'block_opencast'\n                }\n            ];\n            str.get_strings(strings).then(function(results) {\n                initWorkflowModal(ocinstanceid, courseid, results);\n                initReportModal(ocinstanceid, courseid, results);\n                return;\n            }).catch(Notification.exception);\n            window.addEventListener('message', function(event) {\n                if (event.origin !== \"null\") {\n                    return;\n                }\n\n                if (event.data === parseInt(event.data)) {\n                    $('#config-frame').height(event.data);\n                } else {\n                    $('#configparams').val(event.data);\n                    $('#startWorkflowForm').submit();\n                }\n            });\n            if (liveupdate.enabled) {\n                initLiveUpdate(ocinstanceid, contextid, liveupdate.timeout);\n            }\n        };\n\n        return {\n            init: init\n        };\n    });\n\n"],"names":["define","$","ModalFactory","ModalEvents","str","url","Notification","Toast","Ajax","window","liveUpdateInterval","liveUpdateItemsWithError","getLiveUpdateItems","processingItems","getLiveUpdateProcessingItems","uploadingItems","getLiveUpdateUploadingItems","concat","itemsNodeList","document","getElementsByName","Array","from","liveUpdatePerformAjax","type","ocinstanceid","contextid","item","reloadtimeout","identifier","value","title","dataset","undefined","push","remove","call","methodname","args","done","status","statusObject","JSON","parse","replace","replaceLiveUpdateInfo","stringparams","timeout","get_string","result","add","fail","exception","setTimeout","location","reload","newDiv","createElement","innerHTML","trim","replaceElm","firstChild","nodeName","parentNode","newText","createTextNode","insertBefore","previousElementSibling","prevElm","areElementsEqual","baseElm","checkElm","isEqual","attributes","getAttributeNames","attributeName","baseAttributeValue","getAttribute","checkAttributeValue","hasAttribute","init","courseid","liveupdate","get_strings","key","component","then","results","langstrings","getElementById","workflows","text","on","e","preventDefault","clickedVideo","currentTarget","select","workflow","create","types","SAVE_CANCEL","body","relativeUrl","data","modal","setSaveButtonText","getRoot","save","contentWindow","postMessage","show","workflowselect","html","val","description","attr","change","workflowid","this","catch","initWorkflowModal","submit","addClass","removeClass","initReportModal","addEventListener","event","origin","parseInt","height","enabled","clearInterval","length","setInterval","processingItem","uploadingItem","titles","join","addNotification","message","initLiveUpdate"],"mappings":"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"}