{"version":3,"file":"block_index.min.js","sources":["../src/block_index.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to initialise the opencast block.\n *\n * @module     block_opencast\n * @copyright  2021 Tamara Gunkel, University of MÃ¼nster\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/modal_factory', 'core/modal_events',\n    'core/str', 'core/url', 'core/notification', 'core/toast', 'core/ajax'],\n    function($, ModalFactory, ModalEvents, str, url, Notification, Toast, Ajax) {\n        /**\n         * Instantiate the window variable in order to work with Intervals\n         *\n         */\n        window.liveUpdateInterval = null;\n        window.liveUpdateItemsWithError = [];\n\n        var initWorkflowModal = function(ocinstanceid, courseid, langstrings) {\n            if (document.getElementById('workflowsjson')) {\n                var workflows = JSON.parse($('#workflowsjson').text());\n                var privacyinfohtml = null;\n                var privacytitle = null;\n                var privacyworkflows = null;\n                var hasprivacyinfo = false;\n                if (document.getElementById('workflowprivacynotice')) {\n                    hasprivacyinfo = true;\n                    privacyinfohtml = $('#swprivacynoticeinfotext').html();\n                    privacytitle = $('#swprivacynoticetitle').text();\n                    privacyworkflows = JSON.parse($('#swprivacynoticewfds').text());\n                }\n\n                $('.start-workflow').on('click', function(e) {\n                    e.preventDefault();\n                    var clickedVideo = $(e.currentTarget);\n                    var select = '<select class=\"custom-select mb-3\" id=\"workflowselect\" name=\"workflow\">';\n\n                    for (let workflow in workflows) {\n                        select += '<option value=\"' + workflow + '\">' + workflows[workflow].title + '</option>';\n                    }\n\n                    select += '</select>';\n\n                    var privacynoticediv = '';\n                    if (hasprivacyinfo) {\n                        privacynoticediv = '<div id=\"privacynoticediv\" class=\"w-100 mb-2 d-none\">';\n                        privacynoticediv += '<strong>' + privacytitle + '</strong>';\n                        privacynoticediv += '<div class=\"pl-1 pr-1\">' + privacyinfohtml + '</div>';\n                        privacynoticediv += '</div>';\n                    }\n\n                    var workflowdescdiv = '<div id=\"workflowdescdiv\" class=\"mb-2 d-none\"><strong>' + langstrings[7] +\n                        '</strong><p class=\"pl-1 pr-1\" id=\"workflowdesc\"></p></div>';\n\n                    var workflowconfigpaneldiv = '<div id=\"workflowconfigpaneldiv\" class=\"d-none\">' +\n                        '<strong>' + langstrings[8] + '</strong>' +\n                        '<div id=\"workflowconfigpanelloading\">' +\n                        '<i class=\"icon fa fa-circle-o-notch fa-spin fa-fw \" aria-hidden=\"true\"></i></div>' + \n                        '<iframe id=\"config-frame\" ' +\n                        'class=\"w-100 mh-100 m-0 p-0 border-0\" sandbox=\"allow-forms allow-scripts\" src=\"\">' +\n                        '</iframe><input type=\"hidden\" name=\"configparams\" id=\"configparams\"></div>';\n\n                    ModalFactory.create({\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        title: langstrings[5],\n                        body: '<form id=\"startWorkflowForm\" method=\"post\" action=\"' +\n                            url.relativeUrl('blocks/opencast/startworkflow.php', {\n                                'ocinstanceid': ocinstanceid,\n                                'courseid': courseid,\n                                'videoid': clickedVideo.data('id')\n                            }) + '\"><div class=\"form-group\">' +\n                            '<p>' + langstrings[6] + '</p>' +\n                            select +\n                            workflowdescdiv +\n                            privacynoticediv +\n                            workflowconfigpaneldiv +\n                            '</form>'\n                    }, undefined)\n                        .then(function(modal) {\n                            modal.setSaveButtonText(langstrings[5]);\n                            var root = modal.getRoot();\n                            root.on(ModalEvents.save, function(e) {\n                                document.getElementById('config-frame').contentWindow.postMessage('getdata', '*');\n                                // Handle form submission after receiving data.\n                                e.preventDefault();\n                            });\n\n                            // Show description for initial value.\n                            modal.show().then(function() {\n                                const workflowselect = $('#workflowselect');\n                                let workflowid = workflowselect.val();\n                                displayWorkflowDescription(workflows[workflowid]);\n                                displayWorkflowConfigPanel(ocinstanceid, courseid, workflowid);\n                                // The first time to check if the privacy notice must be displayed.\n                                displayWorkflowPrivacyNotice(privacyworkflows, workflowid);\n\n                                // Show workflow description when selected.\n                                workflowselect.change(function() {\n                                    let workflowid = $(this).val();\n                                    displayWorkflowDescription(workflows[workflowid]);\n                                    displayWorkflowConfigPanel(ocinstanceid, courseid, workflowid);\n                                    // After each change, check if the selected workflow has to be displayed.\n                                    displayWorkflowPrivacyNotice(privacyworkflows, workflowid);\n                                });\n                                return;\n                            }).catch(Notification.exception);\n                            return;\n                        }).catch(Notification.exception);\n                });\n            }\n        };\n\n        /**\n         * Helper function to display the privacy notice in workflow modal dialog.\n         * @param {Array} privacyworkflows an array list of workflows to display privacy notice for.\n         * @param {string} workflowid workflow def id\n         */\n        var displayWorkflowPrivacyNotice = function(privacyworkflows, workflowid) {\n            if (Array.isArray(privacyworkflows) && (privacyworkflows.length === 0 || privacyworkflows.includes(workflowid))) {\n                $('#privacynoticediv').removeClass('d-none');\n            } else {\n                $('#privacynoticediv').addClass('d-none');\n            }\n        };\n\n        /**\n         * Helper function to display the description of the workflow.\n         * @param {Object} workflowobj the workflow object\n         */\n        var displayWorkflowDescription = function(workflowobj) {\n            if (workflowobj?.description) {\n                $('#workflowdescdiv').removeClass('d-none');\n                $('#workflowdesc').html(workflowobj.description);\n            } else {\n                $('#workflowdescdiv').addClass('d-none');\n            }\n        };\n\n        /**\n         * Helper function to display Workflow configurration panel.\n         * @param {string} ocinstanceid oc instance id\n         * @param {string} courseid course id\n         * @param {string} workflowid workflow def id\n         */\n        var displayWorkflowConfigPanel = function(ocinstanceid, courseid, workflowid) {\n            $('#workflowconfigpaneldiv').addClass('d-none');\n            $('#workflowconfigpanelloading').removeClass('d-none');\n            $('#config-frame').attr('src', '');\n            var configpanelsrc = url.relativeUrl('blocks/opencast/serveworkflowconfigpanel.php', {\n                'ocinstanceid': ocinstanceid,\n                'courseid': courseid,\n                'workflowid': workflowid\n            });\n            fetch(configpanelsrc).then(function(response) {\n                return response.text();\n            }).then(function(text) {\n                if (text.trim() !== '') {\n                    $('#workflowconfigpaneldiv').removeClass('d-none');\n                    setTimeout(() => {\n                        $('#workflowconfigpanelloading').addClass('d-none');\n                        $('#config-frame').attr('src', configpanelsrc);\n                    }, 300);\n                } else {\n                    $('#workflowconfigpanelloading').removeClass('d-none');\n                }\n            }).catch(Notification.exception);\n        };\n\n        var initReportModal = function(ocinstanceid, courseid, langstrings) {\n            $('.report-problem').on('click', function(e) {\n                e.preventDefault();\n                var clickedVideo = $(e.currentTarget);\n                ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: langstrings[0],\n                    body: '<form id=\"reportProblemForm\" method=\"post\" action=\"' +\n                        url.relativeUrl('blocks/opencast/reportproblem.php', {\n                            'ocinstanceid': ocinstanceid,\n                            'courseid': courseid,\n                            'videoid': clickedVideo.data('id')\n                        }) + '\"><div class=\"form-group\">' +\n                        '<label for=\"inputMessage\">' + langstrings[1] + '</label>' +\n                        '<textarea class=\"form-control\" id=\"inputMessage\" name=\"inputMessage\" rows=\"4\" placeholder=\"' +\n                        langstrings[2] + '\">' + '</textarea>' +\n                        '  <div class=\"invalid-feedback d-none\" id=\"messageValidation\">' + langstrings[3] + '</div>' +\n                        '</div></form>'\n                })\n                    .then(function(modal) {\n                        modal.setSaveButtonText(langstrings[4]);\n                        var root = modal.getRoot();\n                        root.on(ModalEvents.save, function(e) {\n                            if ($('#inputMessage').val()) {\n                                $('#reportProblemForm').submit();\n                            } else {\n                                $('#inputMessage').addClass('is-invalid');\n                                $('#messageValidation').removeClass('d-none');\n                            }\n                            e.preventDefault();\n                        });\n                        modal.show();\n                        return;\n                    }).catch(Notification.exception);\n            });\n        };\n\n        /*\n         * Initialise the status live update in the overview page.\n         */\n        var initLiveUpdate = function(ocinstanceid, contextid, reloadtimeout) {\n            if (window.liveUpdateInterval !== null) {\n                clearInterval(window.liveUpdateInterval);\n            }\n            window.liveUpdateItemsWithError = [];\n            var items = getLiveUpdateItems();\n            if (items.length) {\n                window.liveUpdateInterval = setInterval(function() {\n                    var processingItems = getLiveUpdateProcessingItems();\n                    var uploadingItems = getLiveUpdateUploadingItems();\n                    if (processingItems.length == 0 && uploadingItems.length == 0) {\n                        clearInterval(window.liveUpdateInterval);\n                        if (window.liveUpdateItemsWithError.length > 0) {\n                            var titles = window.liveUpdateItemsWithError.join('</li><li>');\n                            str.get_string('liveupdate_fail_notification_message', 'block_opencast', titles)\n                                .done(function(result) {\n                                    Notification.addNotification({\n                                        message: result,\n                                        type: 'error'\n                                    });\n                                })\n                                .fail(Notification.exception);\n                        }\n                        return;\n                    }\n                    for (var processingItem of processingItems) {\n                        liveUpdatePerformAjax('processing', ocinstanceid, contextid, processingItem, reloadtimeout);\n                    }\n                    for (var uploadingItem of uploadingItems) {\n                        liveUpdatePerformAjax('uploading', ocinstanceid, contextid, uploadingItem, reloadtimeout);\n                    }\n                }, 1000, ocinstanceid, contextid, url, reloadtimeout);\n            }\n        };\n\n        /*\n         * Gets all status live updates items (flags).\n         */\n        var getLiveUpdateItems = function() {\n            var processingItems = getLiveUpdateProcessingItems();\n            var uploadingItems = getLiveUpdateUploadingItems();\n            return processingItems.concat(uploadingItems);\n        };\n\n        /*\n         * Gets all status live updates items for Processing states.\n         */\n        var getLiveUpdateProcessingItems = function() {\n            var itemsNodeList = document.getElementsByName('liveupdate_processing_item');\n            return Array.from(itemsNodeList);\n        };\n\n        /*\n         * Gets all status live updates items for uploading status.\n         */\n        var getLiveUpdateUploadingItems = function() {\n            var itemsNodeList = document.getElementsByName('liveupdate_uploading_item');\n            return Array.from(itemsNodeList);\n        };\n\n        /*\n         * Perform status live update Ajax call to the backend to get the related info.\n         */\n        var liveUpdatePerformAjax = function(type, ocinstanceid, contextid, item, reloadtimeout) {\n            var identifier = item.value;\n            var title = item?.dataset?.title ? item.dataset.title : '';\n            if (identifier == undefined || title == '') {\n                window.liveUpdateItemsWithError.push(title);\n                item.remove();\n                return;\n            }\n            Ajax.call([{\n                methodname: 'block_opencast_get_liveupdate_info',\n                args: {contextid: contextid, ocinstanceid: ocinstanceid, type: type, identifier: identifier},\n                done: function(status) {\n                    if (status == '') {\n                        window.liveUpdateItemsWithError.push(title);\n                        item.remove();\n                        return;\n                    }\n                    var statusObject = JSON.parse(status);\n                    if (statusObject.replace != '') {\n                        replaceLiveUpdateInfo(item, statusObject.replace);\n                    }\n                    if (statusObject.remove == true) {\n                        item.remove();\n                        var stringparams = {\n                            timeout: reloadtimeout,\n                            title: title\n                        };\n                        str.get_string('liveupdate_toast_notification', 'block_opencast', stringparams)\n                            .done(function(result) {\n                                Toast.add(result);\n                            })\n                            .fail(Notification.exception);\n                        setTimeout(function() {\n                            window.location.reload();\n                        }, reloadtimeout * 1000);\n                    }\n                },\n                fail: function() {\n                    window.liveUpdateItemsWithError.push(title);\n                    item.remove();\n                }\n            }]);\n        };\n\n        /*\n         * Replace the new live update status with the current one for both text and DOM element.\n         */\n        var replaceLiveUpdateInfo = function(item, replace) {\n            if (item == undefined || replace == '' || typeof replace != 'string') {\n                return;\n            }\n            var newDiv = document.createElement('div');\n            newDiv.innerHTML = replace.trim();\n            var replaceElm = newDiv.firstChild;\n            if (replaceElm.nodeName == '#text') {\n                var prevText = item.parentNode.firstChild;\n                prevText.remove();\n                var newText = document.createTextNode(replace.trim());\n                item.parentNode.insertBefore(newText, item);\n            } else if (item.previousElementSibling) {\n                var prevElm = item.previousElementSibling;\n                newDiv.innerHTML = replace.trim();\n                if (!areElementsEqual(replaceElm, prevElm)) {\n                    prevElm.remove();\n                    item.parentNode.insertBefore(replaceElm, item);\n                }\n            }\n        };\n\n        /*\n         * Checks if the liev update DOM elements (new vs old) are equal.\n         */\n        var areElementsEqual = function(baseElm, checkElm) {\n            var isEqual = true;\n            var attributes = baseElm.getAttributeNames();\n            for (var attributeName of attributes) {\n                var baseAttributeValue = baseElm.getAttribute(attributeName).trim();\n                var checkAttributeValue = '';\n                if (checkElm.hasAttribute(attributeName)) {\n                    checkAttributeValue = checkElm.getAttribute(attributeName).trim();\n                }\n                if (checkAttributeValue == '') {\n                    continue;\n                }\n                if (checkAttributeValue != baseAttributeValue) {\n                    isEqual = false;\n                }\n            }\n            return isEqual;\n        };\n\n        /*\n         * Initialise all of the modules for the opencast block.\n         */\n        var init = function(courseid, ocinstanceid, contextid, liveupdate) {\n            // Load strings\n            var strings = [\n                {\n                    key: 'reportproblem_modal_title',\n                    component: 'block_opencast'\n                },\n                {\n                    key: 'reportproblem_modal_body',\n                    component: 'block_opencast'\n                },\n                {\n                    key: 'reportproblem_modal_placeholder',\n                    component: 'block_opencast'\n                },\n                {\n                    key: 'reportproblem_modal_required',\n                    component: 'block_opencast'\n                },\n                {\n                    key: 'reportproblem_modal_submit',\n                    component: 'block_opencast'\n                },\n                {\n                    key: 'startworkflow',\n                    component: 'block_opencast'\n                },\n                {\n                    key: 'startworkflow_modal_body',\n                    component: 'block_opencast'\n                },\n                {\n                    key: 'startworkflow_modal_description_title',\n                    component: 'block_opencast'\n                },\n                {\n                    key: 'startworkflow_modal_configpanel_title',\n                    component: 'block_opencast'\n                }\n            ];\n            str.get_strings(strings).then(function(results) {\n                initWorkflowModal(ocinstanceid, courseid, results);\n                initReportModal(ocinstanceid, courseid, results);\n                return;\n            }).catch(Notification.exception);\n            window.addEventListener('message', function(event) {\n                if (event.origin !== \"null\") {\n                    return;\n                }\n\n                if (event.data === parseInt(event.data)) {\n                    $('#config-frame').height(event.data);\n                } else {\n                    $('#configparams').val(event.data);\n                    $('#startWorkflowForm').submit();\n                }\n            });\n            if (liveupdate.enabled) {\n                initLiveUpdate(ocinstanceid, contextid, liveupdate.timeout);\n            }\n        };\n\n        return {\n            init: init\n        };\n    });\n\n"],"names":["define","$","ModalFactory","ModalEvents","str","url","Notification","Toast","Ajax","window","liveUpdateInterval","liveUpdateItemsWithError","displayWorkflowPrivacyNotice","privacyworkflows","workflowid","Array","isArray","length","includes","removeClass","addClass","displayWorkflowDescription","workflowobj","description","html","displayWorkflowConfigPanel","ocinstanceid","courseid","attr","configpanelsrc","relativeUrl","fetch","then","response","text","trim","setTimeout","catch","exception","getLiveUpdateItems","processingItems","getLiveUpdateProcessingItems","uploadingItems","getLiveUpdateUploadingItems","concat","itemsNodeList","document","getElementsByName","from","liveUpdatePerformAjax","type","contextid","item","reloadtimeout","identifier","value","title","dataset","undefined","push","remove","call","methodname","args","done","status","statusObject","JSON","parse","replace","replaceLiveUpdateInfo","stringparams","timeout","get_string","result","add","fail","location","reload","newDiv","createElement","innerHTML","replaceElm","firstChild","nodeName","parentNode","newText","createTextNode","insertBefore","previousElementSibling","prevElm","areElementsEqual","baseElm","checkElm","isEqual","attributes","getAttributeNames","attributeName","baseAttributeValue","getAttribute","checkAttributeValue","hasAttribute","init","liveupdate","get_strings","key","component","results","langstrings","getElementById","workflows","privacyinfohtml","privacytitle","hasprivacyinfo","on","e","preventDefault","clickedVideo","currentTarget","select","workflow","privacynoticediv","workflowdescdiv","workflowconfigpaneldiv","create","types","SAVE_CANCEL","body","data","modal","setSaveButtonText","getRoot","save","contentWindow","postMessage","show","workflowselect","val","change","this","initWorkflowModal","submit","initReportModal","addEventListener","event","origin","parseInt","height","enabled","clearInterval","setInterval","processingItem","uploadingItem","titles","join","addNotification","message","initLiveUpdate"],"mappings":"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"}