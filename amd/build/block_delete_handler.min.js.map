{"version":3,"file":"block_delete_handler.min.js","sources":["../src/block_delete_handler.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to add a custom block_delete handler\n *\n * @module     block_opencast/block_delete_handler\n * @copyright  2024 Justus Dieckmann, University of MÃ¼nster\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport Prefetch from \"core/prefetch\";\nimport {get_string} from 'core/str';\nimport Notification from \"core/notification\";\n\nexport const init = (contextid, deleteurl) => {\n    Prefetch.prefetchTemplate('block_opencast/delete_block_modal');\n    Prefetch.prefetchString('block_opencast', 'deletecheck_title_modal');\n    const deleteButton = document.querySelector('.block_opencast a.dropdown-item.block_opencast_delete');\n    deleteButton.onclick = async(e) => {\n        e.preventDefault();\n\n        const html = await Templates.render('block_opencast/delete_block_modal', {\n            deleteblockurl: deleteurl\n        });\n\n        const modal = await ModalFactory.create({\n            type: ModalFactory.types.CANCEL,\n            body: html,\n            title: await get_string('deletecheck_title_modal', 'block_opencast'),\n            large: true\n        });\n        await modal.show();\n        modal.body[0].querySelector('.block_opencast-delete-mapping').onclick = async() => {\n            try {\n                await Ajax.call([{\n                    methodname: 'block_opencast_unlink_series',\n                    args: {contextid: contextid, ocinstanceid: -1, seriesid: 'all'}\n                }])[0];\n                window.location = deleteurl;\n            } catch (e) {\n                Notification.exception(e);\n            }\n        };\n    };\n};\n"],"names":["contextid","deleteurl","prefetchTemplate","prefetchString","document","querySelector","onclick","async","e","preventDefault","html","Templates","render","deleteblockurl","modal","ModalFactory","create","type","types","CANCEL","body","title","large","show","Ajax","call","methodname","args","ocinstanceid","seriesid","window","location","exception"],"mappings":";;;;;;;wUA8BoB,CAACA,UAAWC,+BACnBC,iBAAiB,uDACjBC,eAAe,iBAAkB,2BACrBC,SAASC,cAAc,yDAC/BC,QAAUC,MAAAA,IACnBC,EAAEC,uBAEIC,WAAaC,mBAAUC,OAAO,oCAAqC,CACrEC,eAAgBZ,YAGda,YAAcC,uBAAaC,OAAO,CACpCC,KAAMF,uBAAaG,MAAMC,OACzBC,KAAMV,KACNW,YAAa,mBAAW,0BAA2B,kBACnDC,OAAO,UAELR,MAAMS,OACZT,MAAMM,KAAK,GAAGf,cAAc,kCAAkCC,QAAUC,oBAE1DiB,cAAKC,KAAK,CAAC,CACbC,WAAY,+BACZC,KAAM,CAAC3B,UAAWA,UAAW4B,cAAe,EAAGC,SAAU,UACzD,GACJC,OAAOC,SAAW9B,UACpB,MAAOO,yBACQwB,UAAUxB"}