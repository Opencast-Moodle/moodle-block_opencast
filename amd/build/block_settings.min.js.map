{"version":3,"file":"block_settings.min.js","sources":["../src/block_settings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to initialise the opencast block settings.\n *\n * @module     block/opencast\n * @copyright  2021 Tamara Gunkel, University of MÃ¼nster\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Tabulator from 'block_opencast/tabulator';\nimport $ from 'jquery';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport * as str from 'core/str';\nimport Notification from 'core/notification';\n\nexport const init = (rolesinputid, metadatainputid, metadataseriesinputid, transcriptionlanguageinputid, ocinstanceid) => {\n\n    // Load strings\n    var strings = [\n        {key: 'heading_role', component: 'block_opencast'},\n        {key: 'heading_actions', component: 'block_opencast'},\n        {key: 'heading_permanent', component: 'block_opencast'},\n        {key: 'delete_role', component: 'block_opencast'},\n        {key: 'delete_confirm_role', component: 'block_opencast'},\n        {key: 'delete_metadata', component: 'block_opencast'},\n        {key: 'delete_confirm_metadata', component: 'block_opencast'},\n        {key: 'heading_name', component: 'block_opencast'},\n        {key: 'heading_datatype', component: 'block_opencast'},\n        {key: 'heading_description', component: 'block_opencast'},\n        {key: 'heading_required', component: 'block_opencast'},\n        {key: 'heading_readonly', component: 'block_opencast'},\n        {key: 'heading_params', component: 'block_opencast'},\n        {key: 'heading_defaultable', component: 'block_opencast'},\n        {key: 'delete', component: 'moodle'},\n        {key: 'transcription_language_key', component: 'block_opencast'},\n        {key: 'transcription_language_value', component: 'block_opencast'},\n        {key: 'transcription_language_delete', component: 'block_opencast'},\n        {key: 'transcription_language_confirm_delete', component: 'block_opencast'},\n        {key: 'readonly_disabled_tooltip_text', component: 'block_opencast'},\n        {key: 'heading_batchable', component: 'block_opencast'},\n    ];\n    str.get_strings(strings).then(function(jsstrings) {\n        // We need to check and apply the transcription section first,\n        // because it might be rendered in different sections (additional features)\n        var hastranscription = false;\n        var transcriptionlanguageinput = $('#' + transcriptionlanguageinputid);\n        if (transcriptionlanguageinput.is(':visible')) {\n            hastranscription = true;\n            transcriptionlanguageinput.parent().hide();\n            transcriptionlanguageinput.parent().next().hide(); // Default value.\n        }\n        // Transcription languages.\n        // We run this part if only the transcription is available.\n        if (hastranscription) {\n            // Because languages are introduced in a way that it needs to take its value from the default,\n            // and the input value is not set via an upgrade, therefore, we would need to introduce a new\n            // way of extracting defaults and put it as its value.\n            extractDefaults(transcriptionlanguageinput);\n            var transcriptionlanguageoptions = new Tabulator(\"#transcriptionlanguagesoptions_\" + ocinstanceid, {\n                data: JSON.parse(transcriptionlanguageinput.val()),\n                layout: \"fitColumns\",\n                dataChanged: function(data) {\n                    data = data.filter(value => value.key && value.value);\n                    transcriptionlanguageinput.val(JSON.stringify(data));\n                },\n                columns: [\n                    {title: jsstrings[15], field: \"key\", headerSort: false, editor: \"input\", widthGrow: 1},\n                    {title: jsstrings[16], field: \"value\", headerSort: false, editor: \"input\", widthGrow: 1},\n                    {\n                        title: \"\",\n                        width: 40,\n                        headerSort: false,\n                        hozAlign: \"center\",\n                        formatter: function() {\n                            return '<i class=\"icon fa fa-trash fa-fw\"></i>';\n                        },\n                        cellClick: function(e, cell) {\n                            ModalFactory.create({\n                                type: ModalFactory.types.SAVE_CANCEL,\n                                title: jsstrings[17],\n                                body: jsstrings[18]\n                            })\n                                .then(function(modal) {\n                                    modal.setSaveButtonText(jsstrings[17]);\n                                    modal.getRoot().on(ModalEvents.save, function() {\n                                        cell.getRow().delete();\n                                    });\n                                    modal.show();\n                                    return;\n                                }).catch(Notification.exception);\n                        }\n                    }\n                ],\n            });\n\n            $('#addrow-transcriptionlanguagesoptions_' + ocinstanceid).click(function() {\n                transcriptionlanguageoptions.addRow({'key': '', 'value': ''});\n            });\n        }\n\n        // Style hidden input.\n        var rolesinput = $('#' + rolesinputid);\n        rolesinput.parent().hide();\n        rolesinput.parent().next().hide(); // Default value.\n\n        // Don't create tables if they are not visible.\n        if (!rolesinput.length) {\n            return;\n        }\n\n        var metadatainput = $('#' + metadatainputid);\n        metadatainput.parent().hide();\n        metadatainput.parent().next().hide(); // Default value.\n\n        var metadataseriesinput = $('#' + metadataseriesinputid);\n        metadataseriesinput.parent().hide();\n        metadataseriesinput.parent().next().hide(); // Default value.\n\n        var rolestable = new Tabulator(\"#rolestable_\" + ocinstanceid, {\n            data: JSON.parse(rolesinput.val()),\n            layout: \"fitColumns\",\n            dataChanged: function(data) {\n                data = data.filter(value => value.rolename);\n                rolesinput.val(JSON.stringify(data));\n            },\n            columns: [\n                {\n                    title: jsstrings[0], field: \"rolename\", editor: \"input\", widthGrow: 4, cellEdited: function(cell) {\n                        if (cell.getData().rolename.includes('[USERNAME]') || cell.getData().rolename.includes('[USERNAME_LOW]') ||\n                            cell.getData().rolename.includes('[USERNAME_UP]')) {\n                            // Tick permanent checkbox.\n                            cell.getRow().update({'permanent': 1});\n                            cell.getRow().getCell(\"permanent\").getElement().getElementsByTagName(\"input\")[0].disabled = true;\n                        } else {\n                            cell.getRow().getCell(\"permanent\").getElement().getElementsByTagName(\"input\")[0].disabled = false;\n                        }\n                    }\n                },\n                {title: jsstrings[1], field: \"actions\", editor: \"input\", widthGrow: 1},\n                {\n                    title: jsstrings[2],\n                    field: \"permanent\",\n                    hozAlign: \"center\",\n                    widthGrow: 0,\n                    formatter: function(cell) {\n                        var input = document.createElement('input');\n                        input.type = 'checkbox';\n                        input.style.cursor = 'pointer';\n                        input.checked = cell.getValue();\n                        input.addEventListener('click', function() {\n                            cell.getRow().update({'permanent': $(this).prop('checked') ? 1 : 0});\n                        });\n\n                        if (cell.getData().rolename.includes('[USERNAME]') || cell.getData().rolename.includes('[USERNAME_LOW]') ||\n                            cell.getData().rolename.includes('[USERNAME_UP]')) {\n                            input.disabled = true;\n                        }\n\n                        return input;\n                    }\n                },\n                {\n                    title: \"\",\n                    width: 40,\n                    headerSort: false,\n                    hozAlign: \"center\",\n                    formatter: function() {\n                        return '<i class=\"icon fa fa-trash fa-fw\"></i>';\n                    },\n                    cellClick: function(e, cell) {\n                        ModalFactory.create({\n                            type: ModalFactory.types.SAVE_CANCEL,\n                            title: jsstrings[3],\n                            body: jsstrings[4]\n                        })\n                            .then(function(modal) {\n                                modal.setSaveButtonText(jsstrings[3]);\n                                modal.getRoot().on(ModalEvents.save, function() {\n                                    cell.getRow().delete();\n                                });\n                                modal.show();\n                                return;\n                            }).catch(Notification.exception);\n                    }\n                }\n            ],\n        });\n\n        $('#addrow-rolestable_' + ocinstanceid).click(function() {\n            rolestable.addRow({'rolename': '', 'actions': '', 'permanent': 0});\n        });\n\n        var metadatatable = new Tabulator(\"#metadatatable_\" + ocinstanceid, {\n            data: JSON.parse(metadatainput.val()),\n            layout: \"fitColumns\",\n            movableRows: true,\n            rowMoved: function() {\n                // Order by row position\n                var data = metadatatable.getRows().map(row => row.getData());\n                data = data.filter(value => value.name);\n                metadatainput.val(JSON.stringify(data));\n            },\n            dataChanged: function() {\n                // Order by row position\n                var data = metadatatable.getRows().map(row => row.getData());\n                data = data.filter(value => value.name);\n                $('#' + metadatainputid).val(JSON.stringify(data));\n            },\n            columns: [\n                {\n                    title: jsstrings[7] + '   ' + $('#helpbtnname_' + ocinstanceid).html(),\n                    field: \"name\",\n                    editor: \"input\",\n                    widthGrow: 1,\n                    headerSort: false\n                },\n                {\n                    title: jsstrings[8], field: \"datatype\", widthGrow: 1, headerSort: false, editor: \"select\", editorParams:\n                        {\n                            values: {\n                                'text': 'String (text)',\n                                'select': 'Drop Down (select)',\n                                'autocomplete': 'Arrays (autocomplete)',\n                                'textarea': 'Long Text (textarea)',\n                                'date_time_selector': 'Date Time Selector (datetime)'\n                            }\n                        }\n                },\n                {\n                    title: jsstrings[9] + '   ' + $('#helpbtndescription_' + ocinstanceid).html(),\n                    field: \"description\",\n                    editor: \"textarea\",\n                    widthGrow: 2,\n                    headerSort: false\n                },\n                {\n                    title: jsstrings[10],\n                    field: \"required\", hozAlign: \"center\", widthGrow: 0, headerSort: false, formatter:\n\n                        function(cell) {\n                            var input = document.createElement('input');\n                            input.type = 'checkbox';\n                            input.style.cursor = 'pointer';\n                            input.checked = cell.getValue();\n                            input.addEventListener('click', function() {\n                                var checked = $(this).prop('checked');\n                                cell.getRow().update({'required': checked ? 1 : 0});\n                                // Make readonly disabled if this item is required.\n                                var readonlyelm = cell.getRow().getCell(\"readonly\").getElement();\n                                var nodelist = readonlyelm.querySelectorAll('.readonly-checkbox');\n                                if (checked && nodelist.length) {\n                                    if (cell.getRow().getData()?.readonly) {\n                                        nodelist[0].click();\n                                    }\n                                    nodelist[0].setAttribute('title', jsstrings[19]);\n                                    nodelist[0].style.cursor = 'not-allowed';\n                                    nodelist[0].disabled = true;\n                                } else {\n                                    nodelist[0].removeAttribute('title');\n                                    nodelist[0].style.cursor = 'pointer';\n                                    nodelist[0].disabled = false;\n                                }\n                            });\n\n                            return input;\n                        }\n                },\n                {\n                    title: jsstrings[11] + '   ' + $('#helpbtnreadonly_' + ocinstanceid).html(),\n                    field: \"readonly\", hozAlign: \"center\", widthGrow: 0, headerSort: false, formatter:\n                        function(cell) {\n                            if (cell.getRow().getCell(\"name\").getValue() == 'title') {\n                                return null;\n                            }\n                            var isrequired = cell.getRow().getData()?.required;\n                            var input = document.createElement('input');\n                            input.type = 'checkbox';\n                            input.style.cursor = 'pointer';\n                            input.classList.add('readonly-checkbox');\n                            input.checked = isrequired ? false : cell.getValue();\n                            if (isrequired) {\n                                input.setAttribute('title', jsstrings[19]);\n                                input.style.cursor = 'not-allowed';\n                                input.disabled = true;\n                            } else {\n                                input.removeAttribute('title');\n                                input.style.cursor = 'pointer';\n                                input.disabled = false;\n                            }\n                            input.addEventListener('click', function() {\n                                // Check if required is enabled.\n                                if (cell.getRow().getData()?.required) {\n                                    // If required is enabled, we disable this checkbox.\n                                    $(this).prop('checked', false);\n                                } else {\n                                    // Otherwise, we provide the checkbox with normal input.\n                                    cell.getRow().update({'readonly': $(this).prop('checked') ? 1 : 0});\n                                }\n                            });\n\n                            return input;\n                        }\n                },\n                {\n                    title: jsstrings[12] + '   ' + $('#helpbtnparams_' + ocinstanceid).html(),\n                    field: \"param_json\",\n                    editor: \"textarea\",\n                    widthGrow: 2,\n                    headerSort: false\n                },\n                {\n                    title: jsstrings[13] + '   ' + $('#helpbtndefaultable_' + ocinstanceid).html(),\n                    field: \"defaultable\", hozAlign: \"center\", widthGrow: 0, headerSort: false, formatter:\n                        function(cell) {\n                            if (cell.getRow().getCell(\"name\").getValue() == 'title') {\n                                return null;\n                            }\n                            var input = document.createElement('input');\n                            input.type = 'checkbox';\n                            input.style.cursor = 'pointer';\n                            input.checked = cell.getValue();\n                            input.addEventListener('click', function() {\n                                cell.getRow().update({'defaultable': $(this).prop('checked') ? 1 : 0});\n                            });\n\n                            return input;\n                        }\n                },\n                {\n                    title: jsstrings[20] + '   ' + $('#helpbtnbatchable_' + ocinstanceid).html(),\n                    field: \"batchable\", hozAlign: \"center\", widthGrow: 0, headerSort: false, formatter:\n                        function(cell) {\n                            if (cell.getRow().getCell(\"name\").getValue() == 'title') {\n                                return null;\n                            }\n                            var input = document.createElement('input');\n                            input.type = 'checkbox';\n                            input.style.cursor = 'pointer';\n                            input.checked = cell.getValue();\n                            input.addEventListener('click', function() {\n                                cell.getRow().update({'batchable': $(this).prop('checked') ? 1 : 0});\n                            });\n\n                            return input;\n                        }\n                },\n                {\n                    title: \"\", width: 40, headerSort: false, hozAlign: \"center\", formatter:\n                        function() {\n                            return '<i class=\"icon fa fa-trash fa-fw\"></i>';\n                        },\n                    cellClick: function(e, cell) {\n                        ModalFactory.create({\n                            type: ModalFactory.types.SAVE_CANCEL,\n                            title: jsstrings[5],\n                            body: jsstrings[6]\n                        })\n                            .then(function(modal) {\n                                modal.setSaveButtonText(jsstrings[14]);\n                                modal.getRoot().on(ModalEvents.save, function() {\n                                    cell.getRow().delete();\n                                });\n                                modal.show();\n                                return;\n                            }).catch(Notification.exception);\n                    }\n                }\n            ],\n        });\n\n        $('#addrow-metadatatable_' + ocinstanceid).click(function() {\n            metadatatable.addRow({'datatype': 'text', 'required': 0, 'readonly': 0, 'param_json': null});\n        });\n\n        var metadataseriestable = new Tabulator(\"#metadataseriestable_\" + ocinstanceid, {\n            data: JSON.parse(metadataseriesinput.val()),\n            layout: \"fitColumns\",\n            movableRows: true,\n            rowMoved: function() {\n                // Order by row position\n                var data = metadataseriestable.getRows().map(row => row.getData());\n                data = data.filter(value => value.name);\n                metadataseriesinput.val(JSON.stringify(data));\n            },\n            dataChanged: function() {\n                // Order by row position\n                var data = metadataseriestable.getRows().map(row => row.getData());\n                data = data.filter(value => value.name);\n                $('#' + metadataseriesinputid).val(JSON.stringify(data));\n            },\n            columns: [\n                {\n                    title: jsstrings[7] + '   ' + $('#helpbtnname_' + ocinstanceid).html(),\n                    field: \"name\",\n                    editor: \"input\",\n                    widthGrow: 1,\n                    headerSort: false\n                },\n                {\n                    title: jsstrings[8], field: \"datatype\", widthGrow: 1, headerSort: false, editor: \"select\", editorParams:\n                        {\n                            values: {\n                                'text': 'String (text)',\n                                'select': 'Drop Down (select)',\n                                'autocomplete': 'Arrays (autocomplete)',\n                                'textarea': 'Long Text (textarea)',\n                                'date_time_selector': 'Date Time Selector (datetime)'\n                            }\n                        }\n                },\n                {\n                    title: jsstrings[9] + '   ' + $('#helpbtndescription_' + ocinstanceid).html(),\n                    field: \"description\",\n                    editor: \"textarea\",\n                    widthGrow: 2,\n                    headerSort: false\n                },\n                {\n                    title: jsstrings[10],\n                    field: \"required\", hozAlign: \"center\", widthGrow: 0, headerSort: false, formatter:\n\n                        function(cell) {\n                            var input = document.createElement('input');\n                            input.type = 'checkbox';\n                            input.style.cursor = 'pointer';\n                            input.checked = cell.getValue();\n                            input.addEventListener('click', function() {\n                                var checked = $(this).prop('checked');\n                                cell.getRow().update({'required': checked ? 1 : 0});\n                                // Make readonly disabled if this item is required.\n                                var readonlyelm = cell.getRow().getCell(\"readonly\").getElement();\n                                var nodelist = readonlyelm.querySelectorAll('.readonly-checkbox');\n                                if (checked && nodelist.length) {\n                                    if (cell.getRow().getData()?.readonly) {\n                                        nodelist[0].click();\n                                    }\n                                    nodelist[0].setAttribute('title', jsstrings[19]);\n                                    nodelist[0].style.cursor = 'not-allowed';\n                                    nodelist[0].disabled = true;\n                                } else {\n                                    nodelist[0].removeAttribute('title');\n                                    nodelist[0].style.cursor = 'pointer';\n                                    nodelist[0].disabled = false;\n                                }\n                            });\n\n                            return input;\n                        }\n                },\n                {\n                    title: jsstrings[11] + '   ' + $('#helpbtnreadonly_' + ocinstanceid).html(),\n                    field: \"readonly\", hozAlign: \"center\", widthGrow: 0, headerSort: false, formatter:\n                        function(cell) {\n                            if (cell.getRow().getCell(\"name\").getValue() == 'title') {\n                                return null;\n                            }\n                            var isrequired = cell.getRow().getData()?.required;\n                            var input = document.createElement('input');\n                            input.type = 'checkbox';\n                            input.style.cursor = 'pointer';\n                            input.classList.add('readonly-checkbox');\n                            input.checked = isrequired ? false : cell.getValue();\n                            if (isrequired) {\n                                input.setAttribute('title', jsstrings[19]);\n                                input.style.cursor = 'not-allowed';\n                                input.disabled = true;\n                            } else {\n                                input.removeAttribute('title');\n                                input.style.cursor = 'pointer';\n                                input.disabled = false;\n                            }\n                            input.addEventListener('click', function() {\n                                // Check if required is enabled.\n                                if (cell.getRow().getData()?.required) {\n                                    // If required is enabled, we disable this checkbox.\n                                    $(this).prop('checked', false);\n                                } else {\n                                    // Otherwise, we provide the checkbox with normal input.\n                                    cell.getRow().update({'readonly': $(this).prop('checked') ? 1 : 0});\n                                }\n                            });\n\n                            return input;\n                        }\n                },\n                {\n                    title: jsstrings[12] + '   ' + $('#helpbtnparams_' + ocinstanceid).html(),\n                    field: \"param_json\",\n                    editor: \"textarea\",\n                    widthGrow: 2,\n                    headerSort: false\n                },\n                {\n                    title: jsstrings[13] + '   ' + $('#helpbtndefaultable_' + ocinstanceid).html(),\n                    field: \"defaultable\", hozAlign: \"center\", widthGrow: 0, headerSort: false, formatter:\n                        function(cell) {\n                            if (cell.getRow().getCell(\"name\").getValue() == 'title') {\n                                return null;\n                            }\n                            var input = document.createElement('input');\n                            input.type = 'checkbox';\n                            input.style.cursor = 'pointer';\n                            input.checked = cell.getValue();\n                            input.addEventListener('click', function() {\n                                cell.getRow().update({'defaultable': $(this).prop('checked') ? 1 : 0});\n                            });\n\n                            return input;\n                        }\n                },\n                {\n                    title: \"\", width: 40, headerSort: false, hozAlign: \"center\", formatter:\n                        function() {\n                            return '<i class=\"icon fa fa-trash fa-fw\"></i>';\n                        },\n                    cellClick: function(e, cell) {\n                        ModalFactory.create({\n                            type: ModalFactory.types.SAVE_CANCEL,\n                            title: jsstrings[5],\n                            body: jsstrings[6]\n                        })\n                            .then(function(modal) {\n                                modal.setSaveButtonText(jsstrings[14]);\n                                modal.getRoot().on(ModalEvents.save, function() {\n                                    cell.getRow().delete();\n                                });\n                                modal.show();\n                                return;\n                            }).catch(Notification.exception);\n                    }\n                }\n            ],\n        });\n\n        $('#addrow-metadataseriestable_' + ocinstanceid).click(function() {\n            metadataseriestable.addRow({'datatype': 'text', 'required': 0, 'readonly': 0, 'param_json': null});\n        });\n\n        /**\n         * Gets the default input value and replace it with actual value if it values are not initialised\n         *\n         * @param {object} input\n         */\n        function extractDefaults(input) {\n            var value = input.val();\n            if (value == '') {\n                var defaultstext = input.parent().next().text();\n                defaultstext = defaultstext != '' ?\n                    defaultstext.slice(defaultstext.indexOf('['), defaultstext.lastIndexOf(']') + 1) : '';\n                if (defaultstext != '') {\n                    input.val(defaultstext);\n                }\n            }\n        }\n        return;\n    }).catch(Notification.exception);\n};\n"],"names":["rolesinputid","metadatainputid","metadataseriesinputid","transcriptionlanguageinputid","ocinstanceid","str","get_strings","key","component","then","jsstrings","hastranscription","transcriptionlanguageinput","is","parent","hide","next","input","val","defaultstext","text","slice","indexOf","lastIndexOf","extractDefaults","transcriptionlanguageoptions","Tabulator","data","JSON","parse","layout","dataChanged","filter","value","stringify","columns","title","field","headerSort","editor","widthGrow","width","hozAlign","formatter","cellClick","e","cell","create","type","ModalFactory","types","SAVE_CANCEL","body","modal","setSaveButtonText","getRoot","on","ModalEvents","save","getRow","delete","show","catch","Notification","exception","click","addRow","rolesinput","length","metadatainput","metadataseriesinput","rolestable","rolename","cellEdited","getData","includes","update","getCell","getElement","getElementsByTagName","disabled","document","createElement","style","cursor","checked","getValue","addEventListener","this","prop","metadatatable","movableRows","rowMoved","getRows","map","row","name","html","editorParams","values","nodelist","querySelectorAll","_cell$getRow$getData","readonly","setAttribute","removeAttribute","isrequired","_cell$getRow$getData2","required","classList","add","_cell$getRow$getData3","metadataseriestable","_cell$getRow$getData4","_cell$getRow$getData5","_cell$getRow$getData6"],"mappings":"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"}